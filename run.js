const puppeteer = require('puppeteer');
const cheerio = require('cheerio');
// const { launchHeadfulBrowserDefault} = require('newsfeel-browser');
const URLParse = require('url-parse');
const logger = require('./src/logger');
const { setupFileLogger } = require('./src/logger');

let PAGE_LINKS = null;

async function autoFillForm(url = "https://mail.yahoo.com/") {

    // Setup Logger
    const log_filename = 'logger.log';
    console.log(`Setting up logger at: ${log_filename}`);
    setupFileLogger(log_filename);

    // Launch Chrome
    logger.info("Opening Chrome instance.")
    const browser = await puppeteer.launch({headless: false});
    const page = await browser.newPage();

    // Go to provided url
    await page.goto(url);

    // Extract all web page links for recursive website crawling
    logger.info(`Extracting links found at url : ${url}`);
    const links = await page.$$eval('a', links => links.map(link => link.href));
    PAGE_LINKS = await links;
    logger.info(`Detected links: ${links}`);



    logger.info(`Extracting all fields where user can input data.`);
    const inputFields = await page.$$eval('input', inputs => {
        const fields = [];
    
        inputs.forEach(input => {
            const type = input.getAttribute('type');
            const name = input.getAttribute('name');
            const id = input.getAttribute('id');
    
            if (type !== 'hidden' && name && !fields.includes(name)) {
            fields.push(name);
            }
    
            if (type !== 'hidden' && id && !fields.includes(id)) {
            fields.push(id);
            }
        });
    
        return fields;
        });

        
        logger.info(`Populating all detected input fields with data.`);
        for (const field of inputFields) {
            await page.type(`input[name="${field}"], input[id="${field}"]`, 'vrednicul dorel');
          }
      

}

autoFillForm();