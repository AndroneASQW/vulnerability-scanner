const { parseRunScriptArguments } = require('./src/utils/cliArgumentParsing');
const { setupFileLogger, setupGoogleCloudLogger } = require('./src/utils/logger');
const { launchHeadfulBrowserDefault} = require('enhanced-browser');
const logger = require('./src/utils/logger');
const extractorAPI = require('./src/extractor/api');
const { Scheduler } = require('./src/scheduler/scheduler');

(async () => {
    const args = parseRunScriptArguments();

    // Check arguments
    if (args._.length == 0) {
        console.log(
            'No running mode specified. Run `npm run --help` for more details.'
        );
        process.exit();
    }
    const runningMode = args._[0];
    const supportedModes = ['extract', 'follow-links-extract'];
    if (!supportedModes.includes(runningMode)) {
        console.log(
            `Running mode not supported. Expected one of ${supportedModes}.`
        );
        process.exit();
    }

    // Initialize logger
    console.log(`Setting up logger at: ${args.logFile}`);
    setupFileLogger(args.logFile);
    logger.info('Started job');

    // Initialize EnhancedBrowser
    logger.info("Initializing Enhanced Browser.");
    const enhancedBrowser = await launchHeadfulBrowserDefault(
        args.chromeProfile, args.abpPath);
    logger.info('Initialized browser successfully');


    
    try {
        if (args._[0] == "extract") {
            await extractorAPI.runExtractionWithArguments(enhancedBrowser, args);
        }
        // else {
        //     const scheduler = new Scheduler(enhancedBrowser, args.props);
        //     await extractorAPI.runFollowLinksExtraction(scheduler, args);
        // }
    } finally {
        await enhancedBrowser.close();
        logger.info('Job finished', 'Info');
    }
})();
