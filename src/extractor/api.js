const diskIO = require('../utils/diskIO');
const { SourceOptions } = require('./options');
const logger = require('../utils/logger');
const { cleanupUrl } = require('../utils/stringManipulation');

/**
 * Extract from a loaded NewsFeelPage.
 * 
 * @param {newsfeelBrowser.NewsFeelPage} page - The page we need to 
 * extract data from.
 * @param {SourceOptions} siteMap - The parse options that should be 
 * used in this case.
 */
async function extractFromNewsFeelPage(page, siteMap) {
    const parsedData = {};

    for (let parseOptions of siteMap.parseOptions) {
        if (parseOptions.itemName == 'comments')
            // For now, this is not supported, but it still
            // can be found in some site maps, so we just
            // skip over this if we find it.
            continue;
        
        const extractionFunction = parseOptions.getExtractionFunction();
        const result = await extractionFunction(page, parseOptions);
        parsedData[parseOptions.itemName] = result;
    }

    return parsedData;
}

/**
 * Run a full extraction based on CLI arguments.
 * 
 * @param {newsfeelBrowser.newsfeelBrowser} nfBrowser Browser used in extraction.
 * @param {Object} args Parsed CLI argulemnts.
 * 
 */
async function runExtractionWithArguments(nfBrowser, args) {
    const siteMap = await SourceOptions.fromYAML(args.map);
    logger.info(`Loaded source map from ${args.map}`);
    
    const page = await nfBrowser.getNewsfeelPageFor(args.url);
    logger.info(`Loaded page at ${args.url}.`);

    const result = await extractFromNewsFeelPage(page, siteMap);

    result.rawUrl = args.url;
    result.url = cleanupUrl(args.url);
    result.extractionTimestamp = Date.now();
    diskIO.writeNewsData(args.output, '', result);
}


/**
 * Run an extraction based on the links that can be followed from an initial
 * page with articles listings.
 *
 * @param {Object} args Parsed CLI argulemnts.
 *
 */
 async function runFollowLinksExtraction(scheduler, args) {
    await scheduler.extractAndSend(args.url, args.map);
    logger.info(`Extraction finished for url: ${args.url} against site map: ${args.map}.`);
}

module.exports = {
    extractFromNewsFeelPage,
    runExtractionWithArguments,
    runFollowLinksExtraction
}
