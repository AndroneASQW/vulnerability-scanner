class SelectorNotFoundError extends Error {
  constructor(configFile, itemName) {
    super(
      `No selector found in cofiguration file ${configFile}, at ${itemName}`
    );
    this.configFile = configFile;
    this.itemName = itemName;
  }
}

class ExtractKeyNotFoundError extends Error {
  constructor(configFile, itemName) {
    super(
      `No "extract" key found for item ${itemName}, in ${configFile}`
    );
    this.configFile = configFile;
    this.itemName = itemName;
  }
}


class AttributesNotFoundError extends Error {
  constructor(configFile, itemName) {
    super(
      `No attributes found in configuration file ${configFile}, at ${itemName}`
    );
    this.configFile = configFile;
    this.itemName = itemName;
  }
}


class ExtractionModeNotSupportedError extends Error {
  constructor(configFile, itemName, mode) {
    super(
      `Extraction mode "${mode}" found in ${configFile}, at ${itemName}.`
    );
    this.mode = mode;
    this.configFile = configFile;
    this.itemName = itemName;
  }
}


module.exports = {
    SelectorNotFoundError,
    ExtractKeyNotFoundError,
    AttributesNotFoundError,
    ExtractionModeNotSupportedError,
};
